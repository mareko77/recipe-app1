{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olive\\\\OneDrive\\\\Desktop\\\\ticket\\\\2app\\\\src\\\\components\\\\Register\\\\Register.js\";\n/*import React from 'react';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n  }\n\n  onNameChange = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('http://localhost:3002/register', { \n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  } \n\n      \n          \n      \n\n  render() {\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;*/\n\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.onInputChange = (field, value) => {\n      this.setState({\n        [field]: value\n      });\n    };\n    this.onSubmitRegister = () => {\n      const {\n        username,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      if (password !== confirmPassword) {\n        this.setState({\n          error: 'Passwords do not match!'\n        });\n        return;\n      }\n\n      // Register the user (send to API)\n      fetch('http://localhost:3002/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      }).then(response => response.json()).then(data => {\n        // On successful registration, show the success message\n        this.setState({\n          registrationSuccess: true,\n          error: null // Reset error state\n        });\n        setTimeout(() => {\n          this.setState({\n            registrationSuccess: false\n          }); // Hide the success message after 3 seconds\n        }, 3000);\n      }).catch(error => {\n        this.setState({\n          error: 'Registration failed. Please try again.'\n        });\n      });\n    };\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: null,\n      registrationSuccess: false // New state for handling success message\n    };\n  }\n  render() {\n    const {\n      username,\n      email,\n      password,\n      confirmPassword,\n      error,\n      registrationSuccess\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pa4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"f2\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"red\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }, this), registrationSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pa3 ba b--green bg-light-green mb3\",\n        children: \"You have successfully registered. You can sign in now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          className: \"pa2 input-reset ba bg-transparent w-100 mb2\",\n          value: username,\n          onChange: e => this.onInputChange('username', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          className: \"pa2 input-reset ba bg-transparent w-100 mb2\",\n          value: email,\n          onChange: e => this.onInputChange('email', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"pa2 input-reset ba bg-transparent w-100 mb2\",\n          value: password,\n          onChange: e => this.onInputChange('password', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          className: \"pa2 input-reset ba bg-transparent w-100 mb2\",\n          value: confirmPassword,\n          onChange: e => this.onInputChange('confirmPassword', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSubmitRegister,\n          className: \"pa2 ba bw1 bg-light-green\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Register;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Register","constructor","props","onInputChange","field","value","setState","onSubmitRegister","username","email","password","confirmPassword","state","error","fetch","method","headers","body","JSON","stringify","then","response","json","data","registrationSuccess","setTimeout","catch","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick"],"sources":["C:/Users/olive/OneDrive/Desktop/ticket/2app/src/components/Register/Register.js"],"sourcesContent":["/*import React from 'react';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n  }\n\n  onNameChange = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('http://localhost:3002/register', { \n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  } \n\n      \n          \n      \n\n  render() {\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;*/\n\n\nimport React, { Component } from 'react';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: null,\n      registrationSuccess: false,  // New state for handling success message\n    };\n  }\n\n  onInputChange = (field, value) => {\n    this.setState({ [field]: value });\n  };\n\n  onSubmitRegister = () => {\n    const { username, email, password, confirmPassword } = this.state;\n    if (password !== confirmPassword) {\n      this.setState({ error: 'Passwords do not match!' });\n      return;\n    }\n\n    // Register the user (send to API)\n    fetch('http://localhost:3002/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, email, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // On successful registration, show the success message\n        this.setState({\n          registrationSuccess: true,\n          error: null,  // Reset error state\n        });\n        setTimeout(() => {\n          this.setState({ registrationSuccess: false });  // Hide the success message after 3 seconds\n        }, 3000);\n      })\n      .catch((error) => {\n        this.setState({ error: 'Registration failed. Please try again.' });\n      });\n  };\n\n  render() {\n    const { username, email, password, confirmPassword, error, registrationSuccess } = this.state;\n    return (\n      <div className=\"pa4\">\n        <h2 className=\"f2\">Register</h2>\n\n        {/* Display error message if any */}\n        {error && <p className=\"red\">{error}</p>}\n\n        {/* Registration Success Message */}\n        {registrationSuccess && (\n          <div className=\"pa3 ba b--green bg-light-green mb3\">\n            You have successfully registered. You can sign in now.\n          </div>\n        )}\n\n        {/* Registration Form */}\n        <div className=\"mb3\">\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            className=\"pa2 input-reset ba bg-transparent w-100 mb2\"\n            value={username}\n            onChange={(e) => this.onInputChange('username', e.target.value)}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"pa2 input-reset ba bg-transparent w-100 mb2\"\n            value={email}\n            onChange={(e) => this.onInputChange('email', e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"pa2 input-reset ba bg-transparent w-100 mb2\"\n            value={password}\n            onChange={(e) => this.onInputChange('password', e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            className=\"pa2 input-reset ba bg-transparent w-100 mb2\"\n            value={confirmPassword}\n            onChange={(e) => this.onInputChange('confirmPassword', e.target.value)}\n          />\n          <button\n            onClick={this.onSubmitRegister}\n            className=\"pa2 ba bw1 bg-light-green\"\n          >\n            Register\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n\n\n\n\n "],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}